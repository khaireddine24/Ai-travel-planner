/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CreateTripImport } from './routes/CreateTrip'
import { Route as IndexImport } from './routes/index'
import { Route as MyTripsIndexImport } from './routes/MyTrips/index'
import { Route as ViewTripTripIdIndexImport } from './routes/ViewTrip/$tripId/index'

// Create/Update Routes

const CreateTripRoute = CreateTripImport.update({
  id: '/CreateTrip',
  path: '/CreateTrip',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MyTripsIndexRoute = MyTripsIndexImport.update({
  id: '/MyTrips/',
  path: '/MyTrips/',
  getParentRoute: () => rootRoute,
} as any)

const ViewTripTripIdIndexRoute = ViewTripTripIdIndexImport.update({
  id: '/ViewTrip/$tripId/',
  path: '/ViewTrip/$tripId/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/CreateTrip': {
      id: '/CreateTrip'
      path: '/CreateTrip'
      fullPath: '/CreateTrip'
      preLoaderRoute: typeof CreateTripImport
      parentRoute: typeof rootRoute
    }
    '/MyTrips/': {
      id: '/MyTrips/'
      path: '/MyTrips'
      fullPath: '/MyTrips'
      preLoaderRoute: typeof MyTripsIndexImport
      parentRoute: typeof rootRoute
    }
    '/ViewTrip/$tripId/': {
      id: '/ViewTrip/$tripId/'
      path: '/ViewTrip/$tripId'
      fullPath: '/ViewTrip/$tripId'
      preLoaderRoute: typeof ViewTripTripIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/CreateTrip': typeof CreateTripRoute
  '/MyTrips': typeof MyTripsIndexRoute
  '/ViewTrip/$tripId': typeof ViewTripTripIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/CreateTrip': typeof CreateTripRoute
  '/MyTrips': typeof MyTripsIndexRoute
  '/ViewTrip/$tripId': typeof ViewTripTripIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/CreateTrip': typeof CreateTripRoute
  '/MyTrips/': typeof MyTripsIndexRoute
  '/ViewTrip/$tripId/': typeof ViewTripTripIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/CreateTrip' | '/MyTrips' | '/ViewTrip/$tripId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/CreateTrip' | '/MyTrips' | '/ViewTrip/$tripId'
  id: '__root__' | '/' | '/CreateTrip' | '/MyTrips/' | '/ViewTrip/$tripId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateTripRoute: typeof CreateTripRoute
  MyTripsIndexRoute: typeof MyTripsIndexRoute
  ViewTripTripIdIndexRoute: typeof ViewTripTripIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateTripRoute: CreateTripRoute,
  MyTripsIndexRoute: MyTripsIndexRoute,
  ViewTripTripIdIndexRoute: ViewTripTripIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/CreateTrip",
        "/MyTrips/",
        "/ViewTrip/$tripId/"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/CreateTrip": {
      "filePath": "CreateTrip.jsx"
    },
    "/MyTrips/": {
      "filePath": "MyTrips/index.jsx"
    },
    "/ViewTrip/$tripId/": {
      "filePath": "ViewTrip/$tripId/index.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
